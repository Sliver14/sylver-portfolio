(()=>{var e={};e.id=502,e.ids=[502],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5550:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>p,serverHooks:()=>l,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>c});var s={};r.r(s),r.d(s,{GET:()=>u});var a=r(6559),o=r(8088),i=r(7719),n=r(2190);async function u(e,{params:t}){try{let{username:e}=await t,r=await fetch(`https://api.github.com/users/${e}`);if(!r.ok)throw Error(`GitHub API responded with ${r.status}`);let s=await r.json();return n.NextResponse.json(s)}catch(e){return n.NextResponse.json({error:"Failed to fetch GitHub data"},{status:500})}}let p=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/github/[username]/route",pathname:"/api/github/[username]",filename:"route",bundlePath:"app/api/github/[username]/route"},resolvedPagePath:"C:\\Users\\LWFS\\Desktop\\sylver\\CODE PROJECTS\\Sylver-Portfolio\\src\\app\\api\\github\\[username]\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:c,serverHooks:l}=p;function x(){return(0,i.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:c})}},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(5550));module.exports=s})();